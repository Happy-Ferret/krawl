SET(SOURCES
	${CMAKE_CURRENT_SOURCE_DIR}/ast.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/brawl.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/brawl.pb.cc
	${CMAKE_CURRENT_SOURCE_DIR}/codegen.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/crawlc.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/lexer.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/message.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/misc.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/parser-code.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/parser.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/semantic.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/source-loc.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/tokens.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/utf8.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/ctocrawl.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/cityhash/city.cc
)

CONFIGURE_FILE(config.hpp.in config.hpp @ONLY)

FIND_PACKAGE(PkgConfig REQUIRED)
PKG_CHECK_MODULES(PROTOBUF REQUIRED protobuf)
STRING(REGEX REPLACE ";" " " PROTOBUF_CFLAGS "${PROTOBUF_CFLAGS}")

INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIRS} ${LLVM_INCLUDE_DIRS} ${CMAKE_CURRENT_BINARY_DIR})
LINK_DIRECTORIES(${LLVM_LIBRARY_DIRS})

ADD_EXECUTABLE(crawlc ${SOURCES})
SET_TARGET_PROPERTIES(crawlc PROPERTIES COMPILE_FLAGS "${PROTOBUF_CFLAGS} ${LLVM_COMPILE_FLAGS}")
TARGET_LINK_LIBRARIES(crawlc ${PROTOBUF_LIBRARIES} mpfr gmp LLVM-2.9)
INSTALL(TARGETS crawlc
	RUNTIME DESTINATION bin)
